name: eShopOnWeb Build and Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  RESOURCE-GROUP: rg-eshoponweb
  LOCATION: westus2
  TEMPLATE-FILE: infra/webapp.bicep
  SUBSCRIPTION-ID: a3a49cf0-afce-4ad3-8dcd-34be88f2cb93
  WEBAPP-NAME: eshoponweb-webapp55229130

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      # Checkout repo
      - uses: actions/checkout@v4

      # Setup .NET SDK
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      # Restore dependencies
      - name: Restore dependencies
        run: dotnet restore ./eShopOnWeb.sln

      # Build solution
      - name: Build solution
        run: dotnet build ./eShopOnWeb.sln --configuration Release --no-restore

      # Publish Web project
      - name: Publish Web project
        run: |
          dotnet publish ./src/Web/Web.csproj -c Release -o ${{env.DOTNET_ROOT}}/myapp
          cd ${{env.DOTNET_ROOT}}/myapp
          zip -r ../app.zip .

      # Upload artifact for deployment
      - name: Upload .NET app artifact
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-app
          path: ${{env.DOTNET_ROOT}}/app.zip

      # Upload Bicep template
      - name: Upload Bicep template
        uses: actions/upload-artifact@v4
        with:
          name: bicep-template
          path: ${{ env.TEMPLATE-FILE }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-publish
    environment: Development
    steps:
      # Download artifacts
      - name: Download .NET app artifact
        uses: actions/download-artifact@v4
        with:
          name: dotnet-app
          path: dotnet-app

      - name: Download Bicep template
        uses: actions/download-artifact@v4
        with:
          name: bicep-template
          path: bicep-template

      # Login to Azure using Service Principal
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Deploy Bicep template (fresh CLI instance to avoid "response consumed" error)
      - name: Deploy Bicep Template
        run: |
          docker run --rm -v $GITHUB_WORKSPACE:/workspace -w /workspace mcr.microsoft.com/azure-cli:latest \
          az deployment group create \
            --resource-group ${{ env.RESOURCE-GROUP }} \
            --template-file bicep-template/webapp.bicep \
            --parameters webAppName=${{ env.WEBAPP-NAME }} location=${{ env.LOCATION }}

      # Deploy website via ZIP (fresh CLI instance)
      - name: Publish Website to WebApp
        run: |
          docker run --rm -v $GITHUB_WORKSPACE:/workspace -w /workspace mcr.microsoft.com/azure-cli:latest \
          az webapp deploy \
            --name ${{ env.WEBAPP-NAME }} \
            --resource-group ${{ env.RESOURCE-GROUP }} \
            --src-path dotnet-app/app.zip \
            --type zip
