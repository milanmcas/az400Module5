name: eShopOnWeb Build and Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  RESOURCE-GROUP: rg-eshoponweb
  LOCATION: westus2
  TEMPLATE-FILE: infra/webapp.bicep
  SUBSCRIPTION-ID: a3a49cf0-afce-4ad3-8dcd-34be88f2cb93
  WEBAPP-NAME: eshoponweb-webapp55229130

jobs:
  buildandtest:
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - uses: actions/checkout@v4

      # Setup .NET SDK
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      # Restore dependencies
      - name: Restore dependencies
        run: dotnet restore ./eShopOnWeb.sln

      # Build solution
      - name: Build with dotnet
        run: dotnet build ./eShopOnWeb.sln --configuration Release --no-restore

      # Test solution
      - name: Test with dotnet
        run: dotnet test ./eShopOnWeb.sln --configuration Release --no-build

      # Publish web project
      - name: dotnet publish
        run: |
          dotnet publish ./src/Web/Web.csproj -c Release -o ${{env.DOTNET_ROOT}}/myapp
          cd ${{env.DOTNET_ROOT}}/myapp
          zip -r ../app.zip .

      # Upload published website artifact
      - name: Upload .NET app artifact
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/app.zip

      # Upload Bicep template artifact
      - name: Upload Bicep template artifact
        uses: actions/upload-artifact@v4
        with:
          name: bicep-template
          path: ${{ env.TEMPLATE-FILE }}

  deploy:
    runs-on: ubuntu-latest
    needs: buildandtest
    environment:
      name: 'Development'
    steps:
      # Download artifacts from build job
      - name: Download .NET app artifact
        uses: actions/download-artifact@v4
        with:
          name: .net-app
          path: .net-app

      - name: Download Bicep template
        uses: actions/download-artifact@v4
        with:
          name: bicep-template
          path: bicep-template

      # Login to Azure using Service Principal
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Check Service Principal Permissions
      - name: Check Service Principal Permissions
        uses: Azure/cli@v2
        with:
          inlineScript: |
            ROLE_COUNT=$(az role assignment list \
              --assignee $(az account show --query user.name -o tsv) \
              --scope /subscriptions/${{ env.SUBSCRIPTION-ID }}/resourceGroups/${{ env.RESOURCE-GROUP }} \
              --query "length(@)")
            echo "Role assignments count: $ROLE_COUNT"
            if [ "$ROLE_COUNT" -eq 0 ]; then
              echo "ERROR: Service Principal has no roles on the resource group. Aborting deployment."
              exit 1
            fi

      # Upgrade Bicep CLI (fix for container errors)
      - name: Upgrade Bicep CLI
        uses: Azure/cli@v2
        with:
          inlineScript: |
            az bicep upgrade
            az bicep version

      # Deploy Bicep Template
      - name: Deploy Bicep Template
        uses: Azure/cli@v2
        with:
          inlineScript: |
            az deployment group create \
              --resource-group ${{ env.RESOURCE-GROUP }} \
              --template-file bicep-template/webapp.bicep \
              --parameters webAppName=${{ env.WEBAPP-NAME }} location=${{ env.LOCATION }}

      # Deploy website via ZIP
      - name: Publish Website to WebApp
        uses: Azure/cli@v2
        with:
          inlineScript: |
            az webapp deploy \
              --name ${{ env.WEBAPP-NAME }} \
              --resource-group ${{ env.RESOURCE-GROUP }} \
              --src-path .net-app/app.zip \
              --type zip
